// Generated by conversion of ThermoCycle
convertElement("ThermoCycle.Components.Units.ExpansionAndCompressionMachines.Reciprocating.BaseClasses.PartialRecipMachine","world.mue","world.mu");
convertElement("ThermoCycle.Components.Units.ExpansionAndCompressionMachines.Reciprocating.TestCases.Cylinder_tester","recipFlange.world.mue","recipFlange.world.mu");
convertElement("ThermoCycle.Components.Units.ExpansionAndCompressionMachines.Reciprocating.TestCases.Flange_tester","recipFlange.world.mue","recipFlange.world.mu");
convertElement("ThermoCycle.Components.Units.ExpansionAndCompressionMachines.Reciprocating.TestCases.Fs_tester","recipFs.world.mue","recipFs.world.mu");
convertElement("ThermoCycle.Components.Units.ExpansionAndCompressionMachines.Reciprocating.TestCases.PV_tester","closedVolume.props.R","closedVolume.props.R_s");
convertElement("ThermoCycle.Components.Units.ExpansionAndCompressionMachines.Reciprocating.TestCases.PV_tester","recipPV.world.mue","recipPV.world.mu");
convertElement("ThermoCycle.Components.Units.ExpansionAndCompressionMachines.Reciprocating.TestCases.ValveTimerTester","sine.freqHz","sine.f");
convertElement("ThermoCycle.Components.Units.ExpansionAndCompressionMachines.Reciprocating.Examples.Expander","recipFlange.world.mue","recipFlange.world.mu");
convertElement("ThermoCycle.Components.Units.ExpansionAndCompressionMachines.Reciprocating.Examples.Compressor","recipFlange.world.mue","recipFlange.world.mu");
convertElement("ThermoCycle.Components.Units.ExpansionAndCompressionMachines.Reciprocating.Examples.ExpanderRecipObj","recipMachine.recipFlange.world.mue","recipMachine.recipFlange.world.mu");
convertElement("ThermoCycle.Components.Units.ExpansionAndCompressionMachines.Reciprocating.ClosedVolume","props.R","props.R_s");
convertElement("ThermoCycle.Components.Units.ExpansionAndCompressionMachines.Reciprocating.HeatTransfer.HX_base","recipFlange.world.mue","recipFlange.world.mu");
convertElement("ThermoCycle.Components.Units.ExpansionAndCompressionMachines.Reciprocating.HeatTransfer.HX_full","recipFlange.world.mue","recipFlange.world.mu");
convertElement("ThermoCycle.Components.Units.ExpansionAndCompressionMachines.Reciprocating.RecipMachine_Flange","world.mue","world.mu");
convertElement("ThermoCycle.Components.Units.ExpansionAndCompressionMachines.Reciprocating.RecipMachine_Fs","world.mue","world.mu");
convertElement("ThermoCycle.Components.Units.ExpansionAndCompressionMachines.Reciprocating.RecipMachine_PV","world.mue","world.mu");
convertElement("ThermoCycle.Components.Units.ExpansionAndCompressionMachines.Reciprocating.RecipMachine","recipFlange.world.mue","recipFlange.world.mu");
convertElement("ThermoCycle.Components.Units.ExpansionAndCompressionMachines.ScrollCompressor.test_ScrollCompressor","sine.freqHz","sine.f");
convertElement("ThermoCycle.Components.Units.ExpansionAndCompressionMachines.ScrollCompressor.test_ScrollCompressor","sine1.freqHz","sine1.f");
convertElement("ThermoCycle.Examples.TestComponents.Test_Flow1D","sine.freqHz","sine.f");
convertElement("ThermoCycle.Examples.TestComponents.Test_Flow1D_MD","sine.freqHz","sine.f");
convertElement("ThermoCycle.Examples.TestComponents.Test_Nozzle","sine.freqHz","sine.f");
convertElement("ThermoCycle.Examples.TestNumericalMethods.Cell1D_Trunc","sine.freqHz","sine.f");
convertElement("ThermoCycle.Examples.TestNumericalMethods.flow1D_Trunc","sine.freqHz","sine.f");
convertElement("ThermoCycle.Media.Test.TestMedium.TestBasePropertiesExplicit","medium1.baseProperties.R","medium1.baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.TestMedium.TestBasePropertiesExplicit","medium2.baseProperties.R","medium2.baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.TestMedium.TestBasePropertiesImplicit","medium1.baseProperties.R","medium1.baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.TestMedium.TestBasePropertiesImplicit","medium2.baseProperties.R","medium2.baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.TestMedium.GenericModels.CompleteBaseProperties","baseProperties.R","baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.GenericModels.CompleteBaseProperties","baseProperties.R","baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.GenericModels.TestStatesSat","baseProperties1.R","baseProperties1.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.GenericModels.TestStatesSat","baseProperties2.R","baseProperties2.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.GenericModels.TestBasePropertiesExplicit","medium1.baseProperties.R","medium1.baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.GenericModels.TestBasePropertiesExplicit","medium2.baseProperties.R","medium2.baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.GenericModels.TestBasePropertiesImplicit","medium1.baseProperties.R","medium1.baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.GenericModels.TestBasePropertiesImplicit","medium2.baseProperties.R","medium2.baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.GenericModels.TestBasePropertiesDynamic","medium.R","medium.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.GenericModels.CompareModelicaFluidProp","fluidPropMedium.baseProperties.R","fluidPropMedium.baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.GenericModels.CompareModelicaFluidProp","modelicaMedium.baseProperties.R","modelicaMedium.baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.IF95.TestStatesSat","baseProperties1.R","baseProperties1.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.IF95.TestStatesSat","baseProperties2.R","baseProperties2.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.IF95.TestBasePropertiesExplicit","medium1.baseProperties.R","medium1.baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.IF95.TestBasePropertiesExplicit","medium2.baseProperties.R","medium2.baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.IF95.TestBasePropertiesImplicit","medium1.baseProperties.R","medium1.baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.IF95.TestBasePropertiesImplicit","medium2.baseProperties.R","medium2.baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.IF95.TestBasePropertiesDynamic","medium.R","medium.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.IF95.TestBasePropertiesExplicit_ModelicaIF97","medium1.baseProperties.R","medium1.baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.IF95.TestBasePropertiesExplicit_ModelicaIF97","medium2.baseProperties.R","medium2.baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.IF95.CompareModelicaFluidProp_liquid","fluidPropMedium.baseProperties.R","fluidPropMedium.baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.IF95.CompareModelicaFluidProp_liquid","modelicaMedium.baseProperties.R","modelicaMedium.baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.IF95.CompareModelicaFluidProp_twophase","fluidPropMedium.baseProperties.R","fluidPropMedium.baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.IF95.CompareModelicaFluidProp_twophase","modelicaMedium.baseProperties.R","modelicaMedium.baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.IF95.CompareModelicaFluidProp_vapour","fluidPropMedium.baseProperties.R","fluidPropMedium.baseProperties.R_s");
convertElement("ThermoCycle.Media.Test.FluidProp.IF95.CompareModelicaFluidProp_vapour","modelicaMedium.baseProperties.R","modelicaMedium.baseProperties.R_s");
